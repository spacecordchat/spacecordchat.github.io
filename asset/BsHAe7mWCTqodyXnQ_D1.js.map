{"version":3,"file":"BsHAe7mWCTqodyXnQ_D1.js","sources":["../../src/utils/Permissions.ts"],"sourcesContent":["// https://github.com/discordjs/discord.js/blob/master/src/util/Permissions.js\n// Apache License Version 2.0 Copyright 2015 - 2021 Amish Shah\n// @fc-license-skip\n\nimport { APIOverwrite } from \"@spacebarchat/spacebar-api-types/v9\";\nimport \"missing-native-js-functions\";\nimport Channel from \"../stores/objects/Channel\";\nimport Guild from \"../stores/objects/Guild\";\nimport GuildMember from \"../stores/objects/GuildMember\";\nimport Role from \"../stores/objects/Role\";\nimport { BitField, BitFieldResolvable, BitFlag } from \"./BitField\";\n\nexport type PermissionResolvable = bigint | number | Permissions | PermissionResolvable[] | PermissionString;\n\ntype PermissionString = keyof typeof Permissions.FLAGS;\n\n// BigInt doesn't have a bit limit (https://stackoverflow.com/questions/53335545/whats-the-biggest-bigint-value-in-js-as-per-spec)\n// const CUSTOM_PERMISSION_OFFSET = BigInt(1) << BigInt(64); // 27 permission bits left for discord to add new ones\n\nexport class Permissions extends BitField {\n\tcache: PermissionCache = {};\n\n\tconstructor(bits: BitFieldResolvable = 0) {\n\t\tsuper(bits);\n\t\tif (this.bitfield & Permissions.FLAGS.ADMINISTRATOR) {\n\t\t\tthis.bitfield = ALL_PERMISSIONS;\n\t\t}\n\t}\n\n\tstatic FLAGS = {\n\t\tCREATE_INSTANT_INVITE: BitFlag(0),\n\t\tKICK_MEMBERS: BitFlag(1),\n\t\tBAN_MEMBERS: BitFlag(2),\n\t\tADMINISTRATOR: BitFlag(3),\n\t\tMANAGE_CHANNELS: BitFlag(4),\n\t\tMANAGE_GUILD: BitFlag(5),\n\t\tADD_REACTIONS: BitFlag(6),\n\t\tVIEW_AUDIT_LOG: BitFlag(7),\n\t\tPRIORITY_SPEAKER: BitFlag(8),\n\t\tSTREAM: BitFlag(9),\n\t\tVIEW_CHANNEL: BitFlag(10),\n\t\tSEND_MESSAGES: BitFlag(11),\n\t\tSEND_TTS_MESSAGES: BitFlag(12),\n\t\tMANAGE_MESSAGES: BitFlag(13),\n\t\tEMBED_LINKS: BitFlag(14),\n\t\tATTACH_FILES: BitFlag(15),\n\t\tREAD_MESSAGE_HISTORY: BitFlag(16),\n\t\tMENTION_EVERYONE: BitFlag(17),\n\t\tUSE_EXTERNAL_EMOJIS: BitFlag(18),\n\t\tVIEW_GUILD_INSIGHTS: BitFlag(19),\n\t\tCONNECT: BitFlag(20),\n\t\tSPEAK: BitFlag(21),\n\t\tMUTE_MEMBERS: BitFlag(22),\n\t\tDEAFEN_MEMBERS: BitFlag(23),\n\t\tMOVE_MEMBERS: BitFlag(24),\n\t\tUSE_VAD: BitFlag(25),\n\t\tCHANGE_NICKNAME: BitFlag(26),\n\t\tMANAGE_NICKNAMES: BitFlag(27),\n\t\tMANAGE_ROLES: BitFlag(28),\n\t\tMANAGE_WEBHOOKS: BitFlag(29),\n\t\tMANAGE_EMOJIS_AND_STICKERS: BitFlag(30),\n\t\tUSE_APPLICATION_COMMANDS: BitFlag(31),\n\t\tREQUEST_TO_SPEAK: BitFlag(32),\n\t\tMANAGE_EVENTS: BitFlag(33),\n\t\tMANAGE_THREADS: BitFlag(34),\n\t\tUSE_PUBLIC_THREADS: BitFlag(35),\n\t\tUSE_PRIVATE_THREADS: BitFlag(36),\n\t\tUSE_EXTERNAL_STICKERS: BitFlag(37),\n\n\t\t/**\n\t\t * CUSTOM PERMISSIONS ideas:\n\t\t * - allow user to dm members\n\t\t * - allow user to pin messages (without MANAGE_MESSAGES)\n\t\t * - allow user to publish messages (without MANAGE_MESSAGES)\n\t\t */\n\t\t// CUSTOM_PERMISSION: BigInt(1) << BigInt(0) + CUSTOM_PERMISSION_OFFSET\n\t};\n\n\tany(permission: PermissionResolvable, checkAdmin = true) {\n\t\treturn (checkAdmin && super.any(Permissions.FLAGS.ADMINISTRATOR)) || super.any(permission);\n\t}\n\n\t/**\n\t * Checks whether the bitfield has a permission, or multiple permissions.\n\t */\n\thas(permission: PermissionResolvable, checkAdmin = true) {\n\t\treturn (checkAdmin && super.has(Permissions.FLAGS.ADMINISTRATOR)) || super.has(permission);\n\t}\n\n\toverwriteChannel(overwrites: APIOverwrite[]) {\n\t\tif (!overwrites) return this;\n\t\tif (!this.cache) throw new Error(\"permission chache not available\");\n\t\toverwrites = overwrites.filter((x) => {\n\t\t\tif (x.type === 0 && this.cache.roles?.some((r) => r.id === x.id)) return true;\n\t\t\tif (x.type === 1 && x.id == this.cache.user_id) return true;\n\t\t\treturn false;\n\t\t});\n\t\treturn new Permissions(Permissions.channelPermission(overwrites, this.bitfield));\n\t}\n\n\tstatic channelPermission(overwrites: APIOverwrite[], init?: bigint) {\n\t\t// TODO: do not deny any permissions if admin\n\t\treturn overwrites.reduce(\n\t\t\t(permission, overwrite) => {\n\t\t\t\t// apply disallowed permission\n\t\t\t\t// * permission: current calculated permission (e.g. 010)\n\t\t\t\t// * deny contains all denied permissions (e.g. 011)\n\t\t\t\t// * allow contains all explicitly allowed permisions (e.g. 100)\n\t\t\t\treturn (permission & ~BigInt(overwrite.deny)) | BigInt(overwrite.allow);\n\t\t\t\t// ~ operator inverts deny (e.g. 011 -> 100)\n\t\t\t\t// & operator only allows 1 for both ~deny and permission (e.g. 010 & 100 -> 000)\n\t\t\t\t// | operators adds both together (e.g. 000 + 100 -> 100)\n\t\t\t},\n\t\t\tinit || BigInt(0),\n\t\t);\n\t}\n\n\tstatic rolePermission(roles: Role[]) {\n\t\t// adds all permissions of all roles together (Bit OR)\n\t\treturn roles.reduce((permission, role) => permission | BigInt(role.permissions), BigInt(0));\n\t}\n\n\tstatic finalPermission({\n\t\tuser,\n\t\tguild,\n\t\tchannel,\n\t}: {\n\t\tuser: { id: string; roles: string[] };\n\t\tguild: { roles: Role[] };\n\t\tchannel?: {\n\t\t\toverwrites?: APIOverwrite[];\n\t\t\trecipient_ids?: string[] | null;\n\t\t\towner_id?: string;\n\t\t};\n\t}) {\n\t\tif (user.id === \"0\") return new Permissions(\"ADMINISTRATOR\"); // system user id\n\n\t\tconst roles = guild.roles.filter((x) => user.roles.includes(x.id));\n\t\tlet permission = Permissions.rolePermission(roles);\n\n\t\tif (channel?.overwrites) {\n\t\t\tconst overwrites = channel.overwrites.filter((x) => {\n\t\t\t\tif (x.type === 0 && user.roles.includes(x.id)) return true;\n\t\t\t\tif (x.type === 1 && x.id == user.id) return true;\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tpermission = Permissions.channelPermission(overwrites, permission);\n\t\t}\n\n\t\tif (channel?.recipient_ids) {\n\t\t\tif (channel?.owner_id === user.id) return new Permissions(\"ADMINISTRATOR\");\n\t\t\tif (channel.recipient_ids.includes(user.id)) {\n\t\t\t\t// Default dm permissions\n\t\t\t\treturn new Permissions([\n\t\t\t\t\t\"VIEW_CHANNEL\",\n\t\t\t\t\t\"SEND_MESSAGES\",\n\t\t\t\t\t\"STREAM\",\n\t\t\t\t\t\"ADD_REACTIONS\",\n\t\t\t\t\t\"EMBED_LINKS\",\n\t\t\t\t\t\"ATTACH_FILES\",\n\t\t\t\t\t\"READ_MESSAGE_HISTORY\",\n\t\t\t\t\t\"MENTION_EVERYONE\",\n\t\t\t\t\t\"USE_EXTERNAL_EMOJIS\",\n\t\t\t\t\t\"CONNECT\",\n\t\t\t\t\t\"SPEAK\",\n\t\t\t\t\t\"MANAGE_CHANNELS\",\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn new Permissions();\n\t\t}\n\n\t\treturn new Permissions(permission);\n\t}\n\n\tstatic getPermission(user_id?: string, guild?: Guild, channel?: Channel) {\n\t\tif (!user_id) throw new Error(\"User not found\");\n\t\tlet member: GuildMember | undefined;\n\n\t\tif (guild) {\n\t\t\tif (guild?.ownerId === user_id) return new Permissions(Permissions.FLAGS.ADMINISTRATOR);\n\t\t\tmember = guild.members.get(user_id);\n\t\t}\n\n\t\tlet recipient_ids = channel?.recipients?.map((x) => x.id);\n\t\tif (!recipient_ids?.length) recipient_ids = undefined;\n\n\t\t// TODO: remove guild.roles and convert recipient_ids to recipients\n\t\tconst permission = Permissions.finalPermission({\n\t\t\tuser: {\n\t\t\t\tid: user_id,\n\t\t\t\troles: member?.roles.map((x) => x.id) || [],\n\t\t\t},\n\t\t\tguild: {\n\t\t\t\troles: member?.roles || [],\n\t\t\t},\n\t\t\tchannel: {\n\t\t\t\toverwrites: channel?.permissionOverwrites,\n\t\t\t\towner_id: channel?.ownerId,\n\t\t\t\trecipient_ids,\n\t\t\t},\n\t\t});\n\n\t\tconst obj = new Permissions(permission);\n\n\t\t// pass cache to permission for possible future getPermission calls\n\t\tobj.cache = { guild, member, channel, roles: member?.roles, user_id };\n\n\t\treturn obj;\n\t}\n}\n\nconst ALL_PERMISSIONS = Object.values(Permissions.FLAGS).reduce((total, val) => total | val, BigInt(0));\n\nexport type PermissionCache = {\n\tchannel?: Channel | undefined;\n\tmember?: GuildMember | undefined;\n\tguild?: Guild | undefined;\n\troles?: Role[] | undefined;\n\tuser_id?: string;\n};\n"],"names":["_Permissions","BitField","bits","__publicField","ALL_PERMISSIONS","permission","checkAdmin","overwrites","x","_a","r","init","overwrite","roles","role","user","guild","channel","user_id","member","recipient_ids","obj","BitFlag","Permissions","total","val"],"mappings":"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"}