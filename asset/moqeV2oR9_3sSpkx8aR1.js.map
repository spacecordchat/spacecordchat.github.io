{"version":3,"file":"moqeV2oR9_3sSpkx8aR1.js","sources":["../../src/utils/Utils.ts"],"sourcesContent":["import * as Icons from \"@mdi/js\";\nimport { APIAttachment, EmbedType } from \"@spacebarchat/spacebar-api-types/v9\";\nimport Channel from \"../stores/objects/Channel\";\nimport { ARCHIVE_MIMES, EMBEDDABLE_AUDIO_MIMES, EMBEDDABLE_IMAGE_MIMES, EMBEDDABLE_VIDEO_MIMES } from \"./constants\";\n\nexport const decimalColorToHex = (decimal: number) => {\n\treturn `#${decimal.toString(16)}`;\n};\n\n// function to convert bytes to human readable format\nexport const bytesToSize = (bytes: number) => {\n\tconst sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\tif (bytes === 0) return \"0 Byte\";\n\tconst i = Math.floor(Math.log(bytes) / Math.log(1024));\n\treturn `${Math.round(bytes / Math.pow(1024, i))} ${sizes[i]}`;\n};\n\nexport const isImage = (fileOrAttachment: File | APIAttachment) => {\n\tconst contentType = \"type\" in fileOrAttachment ? fileOrAttachment.type : fileOrAttachment.content_type;\n\treturn (\n\t\tcontentType?.startsWith(\"image/\") ||\n\t\t(\"content_type\" in fileOrAttachment && fileOrAttachment.content_type === EmbedType.Image)\n\t);\n};\n\nexport const isVideo = (fileOrAttachment: File | APIAttachment) => {\n\tconst contentType = \"type\" in fileOrAttachment ? fileOrAttachment.type : fileOrAttachment.content_type;\n\treturn (\n\t\tcontentType?.startsWith(\"video/\") ||\n\t\t(\"content_type\" in fileOrAttachment && fileOrAttachment.content_type === EmbedType.Video)\n\t);\n};\n\nexport const isAudio = (fileOrAttachment: File | APIAttachment) => {\n\tconst contentType = \"type\" in fileOrAttachment ? fileOrAttachment.type : fileOrAttachment.content_type;\n\treturn contentType?.startsWith(\"audio/\");\n};\n\nexport const isArchive = (fileOrAttachment: File | APIAttachment) => {\n\tconst name = \"name\" in fileOrAttachment ? fileOrAttachment.name : fileOrAttachment.filename;\n\treturn ARCHIVE_MIMES.includes(name.split(\".\").pop() || \"\");\n};\n\ntype IconsType = keyof typeof Icons;\n// returns the icon for a file based on its mimetype\nexport const getFileIcon = (fileOrAttachment: File | APIAttachment): IconsType => {\n\tif (isImage(fileOrAttachment)) return \"mdiFileImage\";\n\tif (isVideo(fileOrAttachment)) return \"mdiFileVideo\";\n\tif (isAudio(fileOrAttachment)) return \"mdiFileMusic\";\n\tif (isArchive(fileOrAttachment)) return \"mdiFolderZip\";\n\treturn \"mdiFile\";\n};\n\nexport const isFileEmbeddable = (fileOrAttachment: File | APIAttachment) => {\n\tconst contentType = \"type\" in fileOrAttachment ? fileOrAttachment.type : fileOrAttachment.content_type;\n\n\tconst image =\n\t\tcontentType === EmbedType.Image ||\n\t\tEMBEDDABLE_IMAGE_MIMES.includes(contentType?.toLowerCase().split(\"/\").pop() || \"\");\n\tconst video =\n\t\tcontentType === EmbedType.Video ||\n\t\tEMBEDDABLE_VIDEO_MIMES.includes(contentType?.toLowerCase().split(\"/\").pop() || \"\");\n\tconst audio = EMBEDDABLE_AUDIO_MIMES.includes(contentType?.toLowerCase().split(\"/\").pop() || \"\");\n\treturn (\n\t\t(isImage(fileOrAttachment) && image) ||\n\t\t(isVideo(fileOrAttachment) && video) ||\n\t\t(isAudio(fileOrAttachment) && audio)\n\t);\n};\n\nexport const getFileDetails = (fileOrAttachment: File | APIAttachment) => {\n\treturn {\n\t\ticon: getFileIcon(fileOrAttachment),\n\t\tisEmbeddable: isFileEmbeddable(fileOrAttachment),\n\t\tisVideo: isVideo(fileOrAttachment),\n\t\tisImage: isImage(fileOrAttachment),\n\t\tisAudio: isAudio(fileOrAttachment),\n\t\tisArchive: isArchive(fileOrAttachment),\n\t};\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const isTauri = !!window.__TAURI_INTERNALS__;\n\nexport function rgbToHsl(r: number, g: number, b: number) {\n\tr /= 255;\n\tg /= 255;\n\tb /= 255;\n\n\tconst max = Math.max(r, g, b),\n\t\tmin = Math.min(r, g, b);\n\tlet h,\n\t\ts,\n\t\tl = (max + min) / 2;\n\n\tif (max == min) {\n\t\th = s = 0; // achromatic\n\t} else {\n\t\tconst d = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n\t\tswitch (max) {\n\t\t\tcase r:\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\n\t\t\t\tbreak;\n\t\t\tcase g:\n\t\t\t\th = (b - r) / d + 2;\n\t\t\t\tbreak;\n\t\t\tcase b:\n\t\t\t\th = (r - g) / d + 4;\n\t\t\t\tbreak;\n\t\t}\n\n\t\th! /= 6;\n\t}\n\n\th = Math.round(h! * 360);\n\ts = Math.round(s * 100);\n\tl = Math.round(l * 100);\n\n\treturn `${h} ${s}% ${l}%`;\n}\n\nexport function hexToRGB(hex: string) {\n\tconst m = hex.match(/^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i);\n\tif (!m) return null;\n\n\treturn {\n\t\tr: parseInt(m[1], 16),\n\t\tg: parseInt(m[2], 16),\n\t\tb: parseInt(m[3], 16),\n\t};\n}\n\nexport function compareChannels(a: Channel, b: Channel): number {\n\treturn (a.position ?? -1) - (b.position ?? -1);\n}\n\nexport function doFit(width: number, height: number, maxWidth: number, maxHeight: number, minWidth = 0, minHeight = 0) {\n\tif (width !== maxWidth || height !== maxHeight) {\n\t\tconst widthScalingFactor = width > maxWidth ? maxWidth / width : 1;\n\t\twidth = Math.max(Math.round(width * widthScalingFactor), minWidth);\n\t\theight = Math.max(Math.round(height * widthScalingFactor), minHeight);\n\n\t\tconst heightScalingFactor = height > maxHeight ? maxHeight / height : 1;\n\t\twidth = Math.max(Math.round(width * heightScalingFactor), minWidth);\n\t\theight = Math.max(Math.round(height * heightScalingFactor), minHeight);\n\t}\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t};\n}\n\nexport function zoomFit(width: number, height: number) {\n\tconst maxHeight = Math.min(Math.round(0.65 * window.innerHeight), 2e3);\n\tconst maxWidth = Math.min(Math.round(0.75 * window.innerWidth), 2e3);\n\n\treturn doFit(width, height, maxWidth, maxHeight);\n}\n"],"names":["decimalColorToHex","decimal","bytesToSize","bytes","sizes","i","isImage","fileOrAttachment","contentType","EmbedType","isVideo","isAudio","isArchive","name","ARCHIVE_MIMES","getFileIcon","isFileEmbeddable","image","EMBEDDABLE_IMAGE_MIMES","video","EMBEDDABLE_VIDEO_MIMES","audio","EMBEDDABLE_AUDIO_MIMES","getFileDetails","isTauri","rgbToHsl","r","g","b","max","min","h","s","l","hexToRGB","hex","m","compareChannels","a","doFit","width","height","maxWidth","maxHeight","minWidth","minHeight","widthScalingFactor","heightScalingFactor","zoomFit"],"mappings":"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"}