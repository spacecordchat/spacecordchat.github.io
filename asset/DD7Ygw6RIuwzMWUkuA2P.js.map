{"version":3,"file":"DD7Ygw6RIuwzMWUkuA2P.js","sources":["../../src/components/messaging/MessageAuthor.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ContextMenuContext } from \"../../contexts/ContextMenuContext\";\nimport { useAppStore } from \"../../hooks/useAppStore\";\nimport useLogger from \"../../hooks/useLogger\";\nimport Guild from \"../../stores/objects/Guild\";\nimport GuildMember from \"../../stores/objects/GuildMember\";\nimport { MessageLike } from \"../../stores/objects/Message\";\nimport Floating from \"../floating/Floating\";\nimport FloatingTrigger from \"../floating/FloatingTrigger\";\n\nconst Container = styled.div`\n\tfont-size: 16px;\n\tfont-weight: var(--font-weight-medium);\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface Props {\n\tmessage: MessageLike;\n\tguild?: Guild;\n}\n\nfunction MessageAuthor({ message, guild }: Props) {\n\tconst app = useAppStore();\n\tconst logger = useLogger(\"MessageAuthor\");\n\tconst contextMenu = useContext(ContextMenuContext);\n\tconst [color, setColor] = React.useState<string | undefined>(undefined);\n\tconst [eventData, setEventData] = React.useState<React.MouseEvent<HTMLDivElement, MouseEvent> | undefined>();\n\tconst [member, setMember] = React.useState<GuildMember | undefined>(undefined);\n\tconst { members } = guild || {};\n\n\tReact.useEffect(() => {\n\t\tif (!eventData) return;\n\t\tcontextMenu?.onContextMenu(eventData, { type: \"user\", user: message.author, member });\n\t}, [eventData, member]);\n\n\tconst onContextMenu = async (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tsetEventData(e);\n\t\tapp.guilds.get(message.guild_id!)?.members.resolve(message.author.id).then(setMember);\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (!members) return;\n\n\t\tconst member = members.get(message.author.id);\n\t\tif (!member) return;\n\t\tsetColor(member.roleColor);\n\t}, [message, members]);\n\n\treturn (\n\t\t<Floating\n\t\t\tplacement=\"right-start\"\n\t\t\ttype=\"userPopout\"\n\t\t\tprops={{\n\t\t\t\tuser: message.author,\n\t\t\t}}\n\t\t>\n\t\t\t<FloatingTrigger>\n\t\t\t\t<Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t}}\n\t\t\t\t\tref={contextMenu?.setReferenceElement}\n\t\t\t\t\tonContextMenu={onContextMenu}\n\t\t\t\t>\n\t\t\t\t\t{message.author.username}\n\t\t\t\t</Container>\n\t\t\t</FloatingTrigger>\n\t\t</Floating>\n\t);\n}\n\nexport default observer(MessageAuthor);\n"],"names":["Container","styled","MessageAuthor","message","guild","app","useAppStore","contextMenu","useContext","ContextMenuContext","color","setColor","React","eventData","setEventData","member","setMember","members","onContextMenu","e","_a","jsx","Floating","FloatingTrigger","MessageAuthor$1","observer"],"mappings":"kQAYA,MAAMA,EAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAezB,SAASC,EAAc,CAAE,QAAAC,EAAS,MAAAC,GAAgB,CACjD,MAAMC,EAAMC,EAAY,EAElBC,EAAcC,aAAWC,CAAkB,EAC3C,CAACC,EAAOC,CAAQ,EAAIC,EAAM,SAA6B,MAAS,EAChE,CAACC,EAAWC,CAAY,EAAIF,EAAM,SAAmE,EACrG,CAACG,EAAQC,CAAS,EAAIJ,EAAM,SAAkC,MAAS,EACvE,CAAE,QAAAK,GAAYb,GAAS,CAAC,EAE9BQ,EAAM,UAAU,IAAM,CAChBC,IACQN,GAAA,MAAAA,EAAA,cAAcM,EAAW,CAAE,KAAM,OAAQ,KAAMV,EAAQ,OAAQ,OAAAY,IAAQ,EAClF,CAACF,EAAWE,CAAM,CAAC,EAEhB,MAAAG,EAAgB,MAAOC,GAAoD,OAChFA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAElBL,EAAaK,CAAC,GACdC,EAAAf,EAAI,OAAO,IAAIF,EAAQ,QAAS,IAAhC,MAAAiB,EAAmC,QAAQ,QAAQjB,EAAQ,OAAO,IAAI,KAAKa,EAC5E,EAEA,OAAAJ,EAAM,UAAU,IAAM,CACrB,GAAI,CAACK,EAAS,OAEd,MAAMF,EAASE,EAAQ,IAAId,EAAQ,OAAO,EAAE,EACvCY,GACLJ,EAASI,EAAO,SAAS,CAAA,EACvB,CAACZ,EAASc,CAAO,CAAC,EAGpBI,EAAA,IAACC,EAAA,CACA,UAAU,cACV,KAAK,aACL,MAAO,CACN,KAAMnB,EAAQ,MACf,EAEA,eAACoB,EACA,CAAA,SAAAF,EAAA,IAACrB,EAAA,CACA,MAAO,CACN,MAAAU,CACD,EACA,IAAKH,GAAA,YAAAA,EAAa,oBAClB,cAAAW,EAEC,WAAQ,OAAO,QAAA,CAAA,CAElB,CAAA,CAAA,CACD,CAEF,CAEA,MAAeM,EAAAC,EAASvB,CAAa"}