{"version":3,"file":"C0MAZwQF8Zs3sCnyN4fO.js","sources":["../../src/components/ChannelHeader.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppStore } from \"../hooks/useAppStore\";\nimport Icon, { IconProps } from \"./Icon\";\nimport { SectionHeader } from \"./SectionHeader\";\nimport Floating from \"./floating/Floating\";\nimport FloatingTrigger from \"./floating/FloatingTrigger\";\n\nconst Wrapper = styled(SectionHeader)`\n\tbackground-color: var(--background-secondary);\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground-color: var(--background-secondary-highlight);\n\t}\n`;\n\nconst HeaderText = styled.header`\n\tfont-size: 16px;\n\tfont-weight: var(--font-weight-medium);\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\tuser-select: none;\n`;\n\nfunction ChannelHeader() {\n\tconst app = useAppStore();\n\n\tconst [isOpen, setOpen] = React.useState(false);\n\tconst [icon, setIcon] = React.useState<IconProps[\"icon\"]>(\"mdiChevronDown\");\n\n\tconst onOpenChange = (open: boolean) => {\n\t\tsetOpen(open);\n\t};\n\n\tuseEffect(() => {\n\t\tif (isOpen) setIcon(\"mdiClose\");\n\t\telse setIcon(\"mdiChevronDown\");\n\t}, [isOpen]);\n\n\tif (app.activeGuildId === \"@me\") {\n\t\treturn (\n\t\t\t<Wrapper\n\t\t\t\tstyle={{\n\t\t\t\t\tcursor: \"default\",\n\t\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<HeaderText>Direct Messages</HeaderText>\n\t\t\t</Wrapper>\n\t\t);\n\t}\n\n\tif (!app.activeGuild) return null;\n\n\treturn (\n\t\t<Floating type=\"guild\" open={isOpen} onOpenChange={onOpenChange} props={{ guild: app.activeGuild! }}>\n\t\t\t<FloatingTrigger>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<HeaderText>{app.activeGuild.name}</HeaderText>\n\t\t\t\t\t<Icon icon={icon} size=\"20px\" color=\"var(--text)\" />\n\t\t\t\t</Wrapper>\n\t\t\t</FloatingTrigger>\n\t\t</Floating>\n\t);\n}\n\nexport default observer(ChannelHeader);\n"],"names":["Wrapper","styled","SectionHeader","HeaderText","ChannelHeader","app","useAppStore","isOpen","setOpen","React","icon","setIcon","onOpenChange","open","useEffect","jsx","Floating","FloatingTrigger","Icon","ChannelHeader$1","observer"],"mappings":"2SASA,MAAMA,EAAUC,EAAOC,CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS9BC,EAAaF,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS1B,SAASG,GAAgB,CACxB,MAAMC,EAAMC,EAAY,EAElB,CAACC,EAAQC,CAAO,EAAIC,EAAM,SAAS,EAAK,EACxC,CAACC,EAAMC,CAAO,EAAIF,EAAM,SAA4B,gBAAgB,EAEpEG,EAAgBC,GAAkB,CACvCL,EAAQK,CAAI,CACb,EAOI,OALJC,EAAAA,UAAU,IAAM,GACXP,EAAgB,WACP,gBADiB,CACD,EAC3B,CAACA,CAAM,CAAC,EAEPF,EAAI,gBAAkB,MAExBU,EAAA,IAACf,EAAA,CACA,MAAO,CACN,OAAQ,UACR,cAAe,OACf,QAAS,OACT,eAAgB,QACjB,EAEA,SAAAe,EAAAA,IAACZ,GAAW,SAAe,iBAAA,CAAA,CAAA,CAC5B,EAIGE,EAAI,kBAGPW,EAAS,CAAA,KAAK,QAAQ,KAAMT,EAAQ,aAAAK,EAA4B,MAAO,CAAE,MAAOP,EAAI,WAAa,EACjG,SAACU,MAAAE,EAAA,CACA,gBAACjB,EACA,CAAA,SAAA,CAACe,EAAA,IAAAZ,EAAA,CAAY,SAAIE,EAAA,YAAY,KAAK,QACjCa,EAAK,CAAA,KAAAR,EAAY,KAAK,OAAO,MAAM,aAAc,CAAA,CAAA,CACnD,CAAA,CACD,CAAA,EACD,EAV4B,IAY9B,CAEA,MAAeS,EAAAC,EAAShB,CAAa"}