{"version":3,"file":"CgMn-SEyTsUNGgyqlMHR.js","sources":["../../src/components/messaging/MessageTextArea.tsx"],"sourcesContent":["import { TextareaAutosize, TextareaAutosizeProps } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { isTouchscreenDevice } from \"../../utils/isTouchscreenDevice\";\n\nconst Container = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n`;\n\nconst TextArea = styled(TextareaAutosize)`\n\tresize: none;\n\tborder: none;\n\toutline: none;\n\tbackground-color: transparent;\n\tcolor: var(--text);\n\t// border-radius: 10px;\n\toverflow-wrap: break-word;\n\tword-break: break-word;\n\twhite-space: break-spaces;\n\tfont-size: 16px;\n\tfont-family: var(--font-family);\n\tflex: 1;\n\tpadding: 13px 10px;\n\n\t&:disabled {\n\t\tcursor: not-allowed;\n\t\tcolor: var(--text-disabled);\n\t}\n`;\n\nfunction MessageTextArea(props: TextareaAutosizeProps) {\n\tconst ref = React.useRef<HTMLTextAreaElement | null>(null);\n\n\tReact.useEffect(() => {\n\t\tif (isTouchscreenDevice) return;\n\t\tref.current && ref.current.focus();\n\t}, [props.value]);\n\n\tconst inputSelected = () => [\"TEXTAREA\", \"INPUT\"].includes(document.activeElement?.nodeName ?? \"\");\n\n\tReact.useEffect(() => {\n\t\tif (!ref.current) return;\n\n\t\tif (isTouchscreenDevice) return;\n\t\tif (!inputSelected()) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tfunction keyDown(e: KeyboardEvent) {\n\t\t\tif ((e.ctrlKey && e.key !== \"v\") || e.altKey || e.metaKey) return;\n\t\t\tif (e.key.length !== 1) return;\n\t\t\tif (ref && !inputSelected()) {\n\t\t\t\tref.current!.focus();\n\t\t\t}\n\t\t}\n\n\t\tdocument.body.addEventListener(\"keydown\", keyDown);\n\t\treturn () => document.body.removeEventListener(\"keydown\", keyDown);\n\t}, [ref, props.value]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<TextArea\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t\tmaxRows={\n\t\t\t\t\t// 50vh\n\t\t\t\t\tMath.floor((window.innerHeight * 0.5) / 20)\n\t\t\t\t}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default MessageTextArea;\n"],"names":["Container","styled","TextArea","TextareaAutosize","MessageTextArea","props","ref","React","isTouchscreenDevice","inputSelected","_a","keyDown","e","jsx"],"mappings":"kHAKA,MAAMA,EAAYC,EAAO;AAAA;AAAA;AAAA,EAKnBC,EAAWD,EAAOE,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBxC,SAASC,EAAgBC,EAA8B,CAChD,MAAAC,EAAMC,EAAM,OAAmC,IAAI,EAEzDA,EAAM,UAAU,IAAM,CACjBC,GACAF,EAAA,SAAWA,EAAI,QAAQ,MAAM,CAAA,EAC/B,CAACD,EAAM,KAAK,CAAC,EAEV,MAAAI,EAAgB,WAAM,OAAC,WAAY,OAAO,EAAE,WAASC,EAAA,SAAS,gBAAT,YAAAA,EAAwB,WAAY,EAAE,GAEjG,OAAAH,EAAM,UAAU,IAAM,CAGrB,GAFI,CAACD,EAAI,SAELE,EAAqB,OACpBC,KACJH,EAAI,QAAQ,MAAM,EAGnB,SAASK,EAAQC,EAAkB,CAC7BA,EAAE,SAAWA,EAAE,MAAQ,KAAQA,EAAE,QAAUA,EAAE,SAC9CA,EAAE,IAAI,SAAW,GACjBN,GAAO,CAACG,KACXH,EAAI,QAAS,MAAM,CACpB,CAGQ,gBAAA,KAAK,iBAAiB,UAAWK,CAAO,EAC1C,IAAM,SAAS,KAAK,oBAAoB,UAAWA,CAAO,CAC/D,EAAA,CAACL,EAAKD,EAAM,KAAK,CAAC,QAGnBL,EACA,CAAA,SAAAa,EAAA,IAACX,EAAA,CACA,IAAAI,EACC,GAAGD,EACJ,QAEC,KAAK,MAAO,OAAO,YAAc,GAAO,EAAE,CAAA,CAAA,EAG7C,CAEF"}