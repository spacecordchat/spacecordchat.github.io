{"version":3,"file":"CyZnPRBWArEMDvvPykKU.js","sources":["../../src/components/floating/FloatingTrigger.tsx"],"sourcesContent":["import { useMergeRefs } from \"@floating-ui/react\";\nimport React from \"react\";\nimport useFloatingContext from \"../../hooks/useFloatingContext\";\n\ninterface PopoverTriggerProps {\n\tchildren: React.ReactNode;\n\tasChild?: boolean;\n}\n\nexport default React.forwardRef<HTMLElement, React.HTMLProps<HTMLElement> & PopoverTriggerProps>(\n\tfunction FloatingTrigger({ children, asChild = false, ...props }, propRef) {\n\t\tconst context = useFloatingContext();\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tconst childrenRef = (children as any).ref;\n\t\tconst ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);\n\n\t\t// `asChild` allows the user to pass any element as the anchor\n\t\tif (asChild && React.isValidElement(children)) {\n\t\t\treturn React.cloneElement(\n\t\t\t\tchildren,\n\t\t\t\tcontext.getReferenceProps({\n\t\t\t\t\tref,\n\t\t\t\t\t...props,\n\t\t\t\t\t...children.props,\n\t\t\t\t\t\"data-state\": context.open ? \"open\" : \"closed\",\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<span ref={ref} data-state={context.open ? \"open\" : \"closed\"} {...context.getReferenceProps(props)}>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t);\n\t},\n);\n"],"names":["FloatingTrigger","React","children","asChild","props","propRef","context","useFloatingContext","childrenRef","ref","useMergeRefs","jsx"],"mappings":"0GASA,MAAeA,EAAAC,EAAM,WACpB,SAAyB,CAAE,SAAAC,EAAU,QAAAC,EAAU,GAAO,GAAGC,CAAM,EAAGC,EAAS,CAC1E,MAAMC,EAAUC,EAAmB,EAE7BC,EAAeN,EAAiB,IAChCO,EAAMC,EAAa,CAACJ,EAAQ,KAAK,aAAcD,EAASG,CAAW,CAAC,EAG1E,OAAIL,GAAWF,EAAM,eAAeC,CAAQ,EACpCD,EAAM,aACZC,EACAI,EAAQ,kBAAkB,CACzB,IAAAG,EACA,GAAGL,EACH,GAAGF,EAAS,MACZ,aAAcI,EAAQ,KAAO,OAAS,QACtC,CAAA,CACF,EAICK,EAAAA,IAAA,OAAA,CAAK,IAAAF,EAAU,aAAYH,EAAQ,KAAO,OAAS,SAAW,GAAGA,EAAQ,kBAAkBF,CAAK,EAC/F,SAAAF,CACF,CAAA,CAAA,CAGH"}