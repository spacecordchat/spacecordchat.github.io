{"version":3,"file":"C-JpZvkyNlQLTjNMNlGf.js","sources":["../../src/stores/ExperimentsStore.ts"],"sourcesContent":["import { action, computed, makeAutoObservable, ObservableMap } from \"mobx\";\n\nexport type ExperimentType = \"test\" | \"message_queue\" | \"presence_rings\";\n\nexport interface ExperimentTreatment {\n\tid: number;\n\tname: string;\n\tdescription?: string;\n}\n\nexport interface Experiment {\n\tid: ExperimentType;\n\tname: string;\n\tdescription: string;\n\ttreatments: ExperimentTreatment[];\n}\n\nexport const EXPERIMENT_LIST: Experiment[] = [\n\t{\n\t\tid: \"test\",\n\t\tname: \"Test\",\n\t\tdescription: \"This is a test experiment.\",\n\t\ttreatments: [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tname: \"Control\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: \"Treatment 1\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tname: \"Treatment 2\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: \"message_queue\",\n\t\tname: \"Message Queue Testing\",\n\t\tdescription: \"Changes the behavior of messages.\",\n\t\ttreatments: [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tname: \"Control\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: \"Treatment 1\",\n\t\t\t\tdescription: \"Stuck in queue\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tname: \"Treatment 2\",\n\t\t\t\tdescription: \"Failed\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: \"presence_rings\",\n\t\tname: \"Presence Rings\",\n\t\tdescription: \"Use rings for presence status instead of dots\",\n\t\ttreatments: [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tname: \"Control\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: \"Treatment 1\",\n\t\t\t\tdescription: \"Use presence dots\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tname: \"Treatment 2\",\n\t\t\t\tdescription: \"Use presence rings\",\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport interface Data {\n\tenabled?: Experiment[];\n}\n\nexport default class ExperimentsStore {\n\tprivate experiments: ObservableMap<string, number>;\n\n\tconstructor() {\n\t\tthis.experiments = new ObservableMap();\n\t\tmakeAutoObservable(this);\n\t}\n\n\t@computed\n\tisTreatmentEnabled(id: ExperimentType, treatment: number) {\n\t\treturn this.experiments.get(id) === treatment;\n\t}\n\n\t@computed\n\tgetTreatment(id: ExperimentType): ExperimentTreatment | undefined {\n\t\tconst treatment = this.experiments.get(id);\n\t\tconst experiment = EXPERIMENT_LIST.find((x) => x.id === id);\n\t\treturn experiment?.treatments.find((x) => x.id === treatment);\n\t}\n\n\t@action\n\tsetTreatment(id: ExperimentType, treatment: number): void {\n\t\tthis.experiments.set(id, treatment);\n\t}\n\n\t@computed\n\tisExperimentEnabled(id: ExperimentType) {\n\t\treturn this.experiments.has(id) && this.experiments.get(id) !== 0;\n\t}\n\n\t@action\n\treset() {\n\t\tthis.experiments.clear();\n\t}\n}\n"],"names":["EXPERIMENT_LIST","ExperimentsStore","__publicField","ObservableMap","makeAutoObservable","id","treatment","experiment","x","__decorateClass","computed","action"],"mappings":"gZAiBO,MAAMA,EAAgC,CAC5C,CACC,GAAI,OACJ,KAAM,OACN,YAAa,6BACb,WAAY,CACX,CACC,GAAI,EACJ,KAAM,SACP,EACA,CACC,GAAI,EACJ,KAAM,aACP,EACA,CACC,GAAI,EACJ,KAAM,aAAA,CACP,CAEF,EACA,CACC,GAAI,gBACJ,KAAM,wBACN,YAAa,oCACb,WAAY,CACX,CACC,GAAI,EACJ,KAAM,SACP,EACA,CACC,GAAI,EACJ,KAAM,cACN,YAAa,gBACd,EACA,CACC,GAAI,EACJ,KAAM,cACN,YAAa,QAAA,CACd,CAEF,EACA,CACC,GAAI,iBACJ,KAAM,iBACN,YAAa,gDACb,WAAY,CACX,CACC,GAAI,EACJ,KAAM,SACP,EACA,CACC,GAAI,EACJ,KAAM,cACN,YAAa,mBACd,EACA,CACC,GAAI,EACJ,KAAM,cACN,YAAa,oBAAA,CACd,CACD,CAEF,EAMA,MAAqBC,CAAiB,CAGrC,aAAc,CAFNC,EAAA,oBAGF,KAAA,YAAc,IAAIC,EACvBC,EAAmB,IAAI,CAAA,CAIxB,mBAAmBC,EAAoBC,EAAmB,CACzD,OAAO,KAAK,YAAY,IAAID,CAAE,IAAMC,CAAA,CAIrC,aAAaD,EAAqD,CACjE,MAAMC,EAAY,KAAK,YAAY,IAAID,CAAE,EACnCE,EAAaP,EAAgB,KAAMQ,GAAMA,EAAE,KAAOH,CAAE,EAC1D,OAAOE,GAAA,YAAAA,EAAY,WAAW,KAAMC,GAAMA,EAAE,KAAOF,EAAS,CAI7D,aAAaD,EAAoBC,EAAyB,CACpD,KAAA,YAAY,IAAID,EAAIC,CAAS,CAAA,CAInC,oBAAoBD,EAAoB,CAChC,OAAA,KAAK,YAAY,IAAIA,CAAE,GAAK,KAAK,YAAY,IAAIA,CAAE,IAAM,CAAA,CAIjE,OAAQ,CACP,KAAK,YAAY,MAAM,CAAA,CAEzB,CAzBCI,EAAA,CADCC,CAAA,EARmBT,EASpB,UAAA,oBAAA,EAKAQ,EAAA,CADCC,CAAA,EAbmBT,EAcpB,UAAA,cAAA,EAOAQ,EAAA,CADCE,CAAA,EApBmBV,EAqBpB,UAAA,cAAA,EAKAQ,EAAA,CADCC,CAAA,EAzBmBT,EA0BpB,UAAA,qBAAA,EAKAQ,EAAA,CADCE,CAAA,EA9BmBV,EA+BpB,UAAA,OAAA"}