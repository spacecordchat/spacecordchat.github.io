{"version":3,"file":"1r47VQmfH9hkSI7OxWfw.js","sources":["../../src/components/messaging/SystemMessage.tsx"],"sourcesContent":["import * as Icons from \"@mdi/js\";\nimport { MessageType } from \"@spacebarchat/spacebar-api-types/v9\";\nimport { observer } from \"mobx-react-lite\";\nimport ReactMarkdown from \"react-markdown\";\nimport reactStringReplace from \"react-string-replace\";\nimport styled from \"styled-components\";\nimport { MessageLike } from \"../../stores/objects/Message\";\nimport Icon from \"../Icon\";\nimport MessageBase, { MessageDetails, MessageInfo } from \"./MessageBase\";\n\nconst SystemContent = styled.div`\n\tdisplay: flex;\n\tpadding: 2px 0;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tflex-direction: row;\n\tfont-size: 16px;\n\tcolor: var(--text-secondary);\n`;\n\nconst SystemUser = styled.span`\n\tcolor: var(--text);\n\tcursor: pointer;\n\tfont-weight: var(--font-weight-medium);\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`;\n\ninterface Props {\n\tmessage: MessageLike;\n\thighlight?: boolean;\n}\n\nconst ICONS: Partial<Record<MessageType, { icon: keyof typeof Icons; color?: string }>> = {\n\t[MessageType.UserJoin]: {\n\t\ticon: \"mdiArrowRight\",\n\t\tcolor: \"var(--success)\",\n\t},\n};\n\nfunction SystemMessage({ message, highlight }: Props) {\n\tconst icon = ICONS[message.type] ?? {\n\t\ticon: \"mdiInformation\",\n\t};\n\n\tlet children;\n\tswitch (message.type) {\n\t\tcase MessageType.UserJoin: {\n\t\t\tconst joinMessage = message.getJoinMessage();\n\t\t\tchildren = (\n\t\t\t\t<div>\n\t\t\t\t\t{reactStringReplace(joinMessage, \"{author}\", (_, i) => (\n\t\t\t\t\t\t<SystemUser key={i}>{message.author.username}</SystemUser>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tbreak;\n\t\t}\n\t\tcase MessageType.Default:\n\t\t\tchildren = <ReactMarkdown children={message.content} />;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// children = <span>Unimplemented system message type '{MessageType[message.type]}'</span>;\n\t\t\tchildren = <ReactMarkdown children={message.content} />;\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<MessageBase header>\n\t\t\t<MessageInfo>\n\t\t\t\t<Icon icon={icon.icon} size=\"16px\" color={icon.color ?? \"var(--text-secondary)\"} />\n\t\t\t</MessageInfo>\n\t\t\t<SystemContent>{children}</SystemContent>\n\t\t\t<MessageDetails message={message} position=\"top\" />\n\t\t</MessageBase>\n\t);\n}\n\nexport default observer(SystemMessage);\n"],"names":["SystemContent","styled","SystemUser","ICONS","MessageType","SystemMessage","message","highlight","icon","children","joinMessage","jsx","reactStringReplace","_","i","ReactMarkdown","jsxs","MessageBase","MessageInfo","Icon","MessageDetails","SystemMessage$1","observer"],"mappings":"6LAUA,MAAMA,EAAgBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvBC,EAAaD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAepBE,EAAoF,CACzF,CAACC,EAAY,QAAQ,EAAG,CACvB,KAAM,gBACN,MAAO,gBAAA,CAET,EAEA,SAASC,EAAc,CAAE,QAAAC,EAAS,UAAAC,GAAoB,CACrD,MAAMC,EAAOL,EAAMG,EAAQ,IAAI,GAAK,CACnC,KAAM,gBACP,EAEI,IAAAG,EACJ,OAAQH,EAAQ,KAAM,CACrB,KAAKF,EAAY,SAAU,CACpB,MAAAM,EAAcJ,EAAQ,eAAe,EAC3CG,EACEE,EAAAA,IAAA,MAAA,CACC,SAAmBC,EAAAF,EAAa,WAAY,CAACG,EAAGC,IAChDH,EAAAA,IAACT,GAAoB,SAAQI,EAAA,OAAO,QAAnB,EAAAQ,CAA4B,CAC7C,EACF,EAGD,KAAA,CAED,KAAKV,EAAY,QAChBK,EAAYE,EAAA,IAAAI,EAAA,CAAc,SAAUT,EAAQ,QAAS,EACrD,MACD,QAECG,EAAYE,EAAA,IAAAI,EAAA,CAAc,SAAUT,EAAQ,QAAS,EACrD,KAAA,CAID,OAAAU,EAAA,KAACC,EAAY,CAAA,OAAM,GAClB,SAAA,CAAAN,EAAA,IAACO,EACA,CAAA,SAAAP,EAAA,IAACQ,EAAK,CAAA,KAAMX,EAAK,KAAM,KAAK,OAAO,MAAOA,EAAK,OAAS,uBAAyB,CAAA,EAClF,EACAG,MAACX,GAAe,SAAAS,EAAS,EACxBE,EAAAA,IAAAS,EAAA,CAAe,QAAAd,EAAkB,SAAS,KAAM,CAAA,CAAA,EAClD,CAEF,CAEA,MAAee,EAAAC,EAASjB,CAAa"}