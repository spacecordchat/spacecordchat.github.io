{"version":3,"file":"y-iv1Thkuwjgv8pmrwvR.js","sources":["../../src/components/modals/JoinServerModal.tsx"],"sourcesContent":["import { Routes } from \"@spacebarchat/spacebar-api-types/v9\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ModalProps, modalController } from \"../../controllers/modals\";\nimport { useAppStore } from \"../../hooks/useAppStore\";\nimport useLogger from \"../../hooks/useLogger\";\nimport { messageFromFieldError } from \"../../utils/messageFromFieldError\";\nimport { Input, InputErrorText, InputLabel, LabelWrapper } from \"../AuthComponents\";\nimport { TextDivider } from \"../Divider\";\nimport { Modal } from \"./ModalComponents\";\n\nconst InviteInputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\ntype FormValues = {\n\tcode: string;\n};\n\nexport function JoinServerModal({ ...props }: ModalProps<\"join_server\">) {\n\tconst logger = useLogger(\"JoinServerModal\");\n\tconst app = useAppStore();\n\tconst navigate = useNavigate();\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors, isLoading },\n\t\tsetError,\n\t\tsetValue,\n\t} = useForm<FormValues>();\n\n\tconst onSubmit = handleSubmit((data) => {\n\t\tconst code = data.code.split(\"/\").reverse()[0];\n\n\t\tapp.rest\n\t\t\t.post<never, { guild_id: string; channel_id: string }>(Routes.invite(code))\n\t\t\t.then((r) => {\n\t\t\t\tnavigate(`/channels/${r.guild_id}/${r.channel_id}`);\n\t\t\t\tmodalController.closeAll();\n\t\t\t})\n\t\t\t.catch((r) => {\n\t\t\t\tif (\"message\" in r) {\n\t\t\t\t\tif (r.errors) {\n\t\t\t\t\t\tconst t = messageFromFieldError(r.errors);\n\t\t\t\t\t\tif (t) {\n\t\t\t\t\t\t\tsetError(t.field as keyof FormValues, {\n\t\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\t\tmessage: t.error,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetError(\"code\", {\n\t\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\t\tmessage: r.message,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(\"code\", {\n\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\tmessage: r.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// unknown error\n\t\t\t\t\tlogger.error(r);\n\t\t\t\t\tsetError(\"code\", {\n\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\tmessage: \"Unknown Error\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\tonClose={() => modalController.closeAll()}\n\t\t\ttitle=\"Join a Guild\"\n\t\t\tdescription=\"Enter an invite below to join an existing guild.\"\n\t\t\tactions={[\n\t\t\t\t{\n\t\t\t\t\tonClick: onSubmit,\n\t\t\t\t\tchildren: <span>Join</span>,\n\t\t\t\t\tpalette: \"primary\",\n\t\t\t\t\tconfirmation: true,\n\t\t\t\t\tdisabled: isLoading,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tonClick: () => modalController.pop(\"close\"),\n\t\t\t\t\tchildren: <span>Back</span>,\n\t\t\t\t\tpalette: \"link\",\n\t\t\t\t\tdisabled: isLoading,\n\t\t\t\t},\n\t\t\t]}\n\t\t>\n\t\t\t<form\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tonSubmit();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<InviteInputContainer>\n\t\t\t\t\t<LabelWrapper error={!!errors.code}>\n\t\t\t\t\t\t<InputLabel>Invite Link</InputLabel>\n\n\t\t\t\t\t\t{errors.code && (\n\t\t\t\t\t\t\t<InputErrorText>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TextDivider>-</TextDivider>\n\t\t\t\t\t\t\t\t\t{errors.code.message}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</InputErrorText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</LabelWrapper>\n\t\t\t\t\t<Input\n\t\t\t\t\t\t{...register(\"code\", { required: true })}\n\t\t\t\t\t\tplaceholder={`${window.location.origin}/invite/`}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tmaxLength={9999}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\terror={!!errors.code}\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tminLength={6}\n\t\t\t\t\t/>\n\t\t\t\t</InviteInputContainer>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n"],"names":["InviteInputContainer","styled","JoinServerModal","props","logger","useLogger","app","useAppStore","navigate","useNavigate","register","handleSubmit","errors","isLoading","setError","setValue","useForm","onSubmit","data","code","Routes","modalController","messageFromFieldError","jsx","Modal","e","jsxs","LabelWrapper","InputLabel","InputErrorText","Fragment","TextDivider","Input"],"mappings":"qcAYA,MAAMA,EAAuBC,EAAO;AAAA;AAAA;AAAA,EAS7B,SAASC,EAAgB,CAAE,GAAGC,GAAoC,CAClE,MAAAC,EAASC,EAAU,iBAAiB,EACpCC,EAAMC,EAAY,EAClBC,EAAWC,EAAY,EAEvB,CACL,SAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,EAAQ,UAAAC,CAAU,EAC/B,SAAAC,EACA,SAAAC,GACGC,EAAoB,EAElBC,EAAWN,EAAcO,GAAS,CACjC,MAAAC,EAAOD,EAAK,KAAK,MAAM,GAAG,EAAE,UAAU,CAAC,EAEzCZ,EAAA,KACF,KAAsDc,EAAO,OAAOD,CAAI,CAAC,EACzE,KAAM,GAAM,CACZX,EAAS,aAAa,EAAE,QAAQ,IAAI,EAAE,UAAU,EAAE,EAClDa,EAAgB,SAAS,CAAA,CACzB,EACA,MAAO,GAAM,CACb,GAAI,YAAa,EAChB,GAAI,EAAE,OAAQ,CACP,MAAA,EAAIC,EAAsB,EAAE,MAAM,EACpC,EACHR,EAAS,EAAE,MAA2B,CACrC,KAAM,SACN,QAAS,EAAE,KAAA,CACX,EAEDA,EAAS,OAAQ,CAChB,KAAM,SACN,QAAS,EAAE,OAAA,CACX,CACF,MAEAA,EAAS,OAAQ,CAChB,KAAM,SACN,QAAS,EAAE,OAAA,CACX,OAIFV,EAAO,MAAM,CAAC,EACdU,EAAS,OAAQ,CAChB,KAAM,SACN,QAAS,eAAA,CACT,CACF,CACA,CAAA,CACF,EAGA,OAAAS,EAAA,IAACC,EAAA,CACC,GAAGrB,EACJ,QAAS,IAAMkB,EAAgB,SAAS,EACxC,MAAM,eACN,YAAY,mDACZ,QAAS,CACR,CACC,QAASJ,EACT,SAAWM,EAAAA,IAAA,OAAA,CAAK,SAAI,MAAA,CAAA,EACpB,QAAS,UACT,aAAc,GACd,SAAUV,CACX,EACA,CACC,QAAS,IAAMQ,EAAgB,IAAI,OAAO,EAC1C,SAAWE,EAAAA,IAAA,OAAA,CAAK,SAAI,MAAA,CAAA,EACpB,QAAS,OACT,SAAUV,CAAA,CAEZ,EAEA,SAAAU,EAAA,IAAC,OAAA,CACA,UAAYE,GAAM,CACbA,EAAE,MAAQ,UACbA,EAAE,eAAe,EACRR,EAAA,EAEX,EAEA,gBAACjB,EACA,CAAA,SAAA,CAAA0B,EAAA,KAACC,EAAa,CAAA,MAAO,CAAC,CAACf,EAAO,KAC7B,SAAA,CAAAW,EAAAA,IAACK,GAAW,SAAW,aAAA,CAAA,EAEtBhB,EAAO,MACNW,EAAAA,IAAAM,EAAA,CACA,SACCH,EAAA,KAAAI,WAAA,CAAA,SAAA,CAAAP,EAAAA,IAACQ,GAAY,SAAC,GAAA,CAAA,EACbnB,EAAO,KAAK,OAAA,CAAA,CACd,CACD,CAAA,CAAA,EAEF,EACAW,EAAA,IAACS,EAAA,CACC,GAAGtB,EAAS,OAAQ,CAAE,SAAU,GAAM,EACvC,YAAa,GAAG,OAAO,SAAS,MAAM,WACtC,KAAK,OACL,UAAW,KACX,SAAQ,GACR,MAAO,CAAC,CAACE,EAAO,KAChB,SAAUC,EACV,UAAS,GACT,UAAW,CAAA,CAAA,CACZ,CACD,CAAA,CAAA,CAAA,CACD,CACD,CAEF"}