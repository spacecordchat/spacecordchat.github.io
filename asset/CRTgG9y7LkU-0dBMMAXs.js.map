{"version":3,"file":"CRTgG9y7LkU-0dBMMAXs.js","sources":["../../src/components/messaging/MessageGroup.tsx"],"sourcesContent":["import { MessageType } from \"@spacebarchat/spacebar-api-types/v9\";\nimport { observer } from \"mobx-react-lite\";\nimport { MessageGroup as MessageGroupType } from \"../../stores/MessageStore\";\nimport Message from \"./Message\";\nimport SystemMessage from \"./SystemMessage\";\n\ninterface Props {\n\tgroup: MessageGroupType;\n}\n\n/**\n * Component that handles rendering a group of messages from the same author\n */\nfunction MessageGroup({ group }: Props) {\n\tconst { messages } = group;\n\n\treturn (\n\t\t<>\n\t\t\t{messages.map((message, index) => {\n\t\t\t\tif (message.type === MessageType.Default || message.type === MessageType.Reply) {\n\t\t\t\t\treturn <Message key={message.id} message={message} header={index === messages.length - 1} />;\n\t\t\t\t} else return <SystemMessage key={message.id} message={message} />;\n\t\t\t})}\n\t\t</>\n\t);\n}\n\nexport default observer(MessageGroup);\n"],"names":["MessageGroup","group","messages","jsx","Fragment","message","index","MessageType","Message","SystemMessage","MessageGroup$1","observer"],"mappings":"yJAaA,SAASA,EAAa,CAAE,MAAAC,GAAgB,CACjC,KAAA,CAAE,SAAAC,GAAaD,EAErB,OAEGE,EAAA,IAAAC,EAAA,SAAA,CAAA,SAAAF,EAAS,IAAI,CAACG,EAASC,IACnBD,EAAQ,OAASE,EAAY,SAAWF,EAAQ,OAASE,EAAY,MACjEJ,MAACK,GAAyB,QAAAH,EAAkB,OAAQC,IAAUJ,EAAS,OAAS,GAAlEG,EAAQ,EAA6D,EAC7EF,EAAA,IAACM,EAA+B,CAAA,QAAAJ,CAAA,EAAZA,EAAQ,EAAsB,CAChE,EACF,CAEF,CAEA,MAAeK,EAAAC,EAASX,CAAY"}