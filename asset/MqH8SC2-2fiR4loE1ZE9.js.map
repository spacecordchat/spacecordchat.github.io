{"version":3,"file":"MqH8SC2-2fiR4loE1ZE9.js","sources":["../../src/pages/LoginPage.tsx"],"sourcesContent":["import HCaptchaLib from \"@hcaptcha/react-hcaptcha\";\nimport { Routes } from \"@spacebarchat/spacebar-api-types/v9\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport SpacebarLogoBlue from \"../assets/images/logo/Logo-Blue.svg?react\";\nimport {\n\tAuthContainer,\n\tAuthSwitchPageContainer,\n\tAuthSwitchPageLabel,\n\tAuthSwitchPageLink,\n\tFormContainer,\n\tHeader,\n\tInput,\n\tInputContainer,\n\tInputErrorText,\n\tInputLabel,\n\tInputWrapper,\n\tLabelWrapper,\n\tSubHeader,\n\tSubmitButton,\n\tWrapper,\n} from \"../components/AuthComponents\";\nimport { TextDivider } from \"../components/Divider\";\nimport HCaptcha, { HeaderContainer } from \"../components/HCaptcha\";\nimport { useAppStore } from \"../hooks/useAppStore\";\nimport useLogger from \"../hooks/useLogger\";\nimport { AUTH_NO_BRANDING } from \"../stores/AppStore\";\nimport { Globals } from \"../utils/Globals\";\nimport REST from \"../utils/REST\";\nimport { RouteSettings } from \"../utils/constants\";\nimport {\n\tIAPILoginRequest,\n\tIAPILoginResponse,\n\tIAPILoginResponseError,\n\tIAPILoginResponseMFARequired,\n} from \"../utils/interfaces/api\";\nimport { messageFromFieldError } from \"../utils/messageFromFieldError\";\nimport MFA from \"./subpages/MFA\";\n\ntype FormValues = {\n\tlogin: string;\n\tpassword: string;\n\tinstance: string;\n\tcaptcha_key?: string;\n};\n\nfunction LoginPage() {\n\tconst app = useAppStore();\n\tconst logger = useLogger(\"LoginPage\");\n\tconst navigate = useNavigate();\n\tconst [loading, setLoading] = React.useState(false);\n\tconst [captchaSiteKey, setCaptchaSiteKey] = React.useState<string>();\n\tconst [mfaData, setMfaData] = React.useState<IAPILoginResponseMFARequired>();\n\tconst captchaRef = React.useRef<HCaptchaLib>(null);\n\tconst [debounce, setDebounce] = React.useState<NodeJS.Timeout | null>(null);\n\tconst [isCheckingInstance, setCheckingInstance] = React.useState(false);\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\tsetError,\n\t\tsetValue,\n\t\tclearErrors,\n\t} = useForm<FormValues>();\n\n\tconst resetCaptcha = () => {\n\t\tcaptchaRef.current?.resetCaptcha();\n\t\tsetValue(\"captcha_key\", undefined);\n\t};\n\n\tconst getValidURL = (url: string) => {\n\t\ttry {\n\t\t\treturn new URL(url);\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t};\n\n\tconst onSubmit = handleSubmit((data) => {\n\t\tsetLoading(true);\n\t\tsetCaptchaSiteKey(undefined);\n\t\tsetMfaData(undefined);\n\n\t\tif (\"token@spacebar.chat\" == data.login) {\n\t\t\t// Token\n\t\t\tapp.setToken(data.password, true);\n\t\t\treturn;\n\t\t}\n\n\t\tapp.rest\n\t\t\t.post<IAPILoginRequest, IAPILoginResponse>(Routes.login(), {\n\t\t\t\tlogin: data.login,\n\t\t\t\tpassword: data.password,\n\t\t\t\tcaptcha_key: data.captcha_key,\n\t\t\t\tundelete: false,\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tif (\"token\" in r && \"settings\" in r) {\n\t\t\t\t\t// success\n\t\t\t\t\tapp.setToken(r.token, true);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (\"ticket\" in r) {\n\t\t\t\t\t// mfa\n\t\t\t\t\tlogger.info(\"MFA Required\", r);\n\t\t\t\t\tsetMfaData(r);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// unknown error\n\t\t\t\t\tlogger.error(r);\n\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\tmessage: \"Unknown Error\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((r: IAPILoginResponseError) => {\n\t\t\t\tif (\"captcha_key\" in r) {\n\t\t\t\t\t// catcha required\n\t\t\t\t\tif (r.captcha_key[0] !== \"captcha-required\") {\n\t\t\t\t\t\t// some kind of captcha error\n\t\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\tmessage: `Captcha Error: ${r.captcha_key[0]}`,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (r.captcha_service !== \"hcaptcha\") {\n\t\t\t\t\t\t// recaptcha or something else\n\t\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\tmessage: `Unsupported captcha service: ${r.captcha_service}`,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// hcaptcha\n\t\t\t\t\t\tsetCaptchaSiteKey(r.captcha_sitekey);\n\t\t\t\t\t\tcaptchaRef.current?.execute();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresetCaptcha();\n\t\t\t\t} else if (\"message\" in r) {\n\t\t\t\t\t// error\n\t\t\t\t\tif (r.errors) {\n\t\t\t\t\t\tconst t = messageFromFieldError(r.errors);\n\t\t\t\t\t\tif (t) {\n\t\t\t\t\t\t\tsetError(t.field as keyof FormValues, {\n\t\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\t\tmessage: t.error,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\t\tmessage: r.message,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\t\tmessage: r.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresetCaptcha();\n\t\t\t\t} else {\n\t\t\t\t\t// unknown error\n\t\t\t\t\tlogger.error(r);\n\t\t\t\t\tsetError(\"login\", {\n\t\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\t\tmessage: \"Unknown Error\",\n\t\t\t\t\t});\n\t\t\t\t\tresetCaptcha();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => setLoading(false));\n\t});\n\n\tconst onCaptchaVerify = (token: string) => {\n\t\tsetValue(\"captcha_key\", token);\n\t\tonSubmit();\n\t};\n\n\tconst handleInstanceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tclearErrors(\"instance\");\n\t\tsetCheckingInstance(false);\n\n\t\t// set as validating\n\t\tif (debounce) clearTimeout(debounce);\n\n\t\tconst doRequest = async () => {\n\t\t\tconst url = getValidURL(e.target.value);\n\t\t\tif (!url) return;\n\t\t\tsetCheckingInstance(true);\n\n\t\t\tlet endpoints: RouteSettings;\n\t\t\ttry {\n\t\t\t\tendpoints = await REST.getEndpointsFromDomain(url);\n\t\t\t} catch (e) {\n\t\t\t\tsetCheckingInstance(false);\n\t\t\t\treturn setError(\"instance\", {\n\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\tmessage: (e instanceof Error && e.message) || \"Instance could not be resolved\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlogger.debug(`Instance lookup has set routes to`, endpoints);\n\t\t\tGlobals.routeSettings = endpoints; // hmm\n\t\t\tGlobals.save();\n\t\t\tsetCheckingInstance(false);\n\t\t};\n\n\t\tsetDebounce(setTimeout(doRequest, 500));\n\t};\n\n\tconst forgotPassword = () => {\n\t\t// TODO: forgot password modal\n\t};\n\n\tif (captchaSiteKey) {\n\t\treturn <HCaptcha captchaRef={captchaRef} sitekey={captchaSiteKey} onVerify={onCaptchaVerify} />;\n\t}\n\n\tif (mfaData) {\n\t\treturn (\n\t\t\t<MFA\n\t\t\t\t{...mfaData}\n\t\t\t\tclose={() => {\n\t\t\t\t\tsetMfaData(undefined);\n\t\t\t\t\tresetCaptcha();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<AuthContainer>\n\t\t\t\t<HeaderContainer>\n\t\t\t\t\t{AUTH_NO_BRANDING ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Header>Login to Spacebar</Header>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<SpacebarLogoBlue height={48} width=\"auto\" />\n\t\t\t\t\t\t\t<SubHeader noBranding>Log into Spacebar</SubHeader>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</HeaderContainer>\n\n\t\t\t\t<FormContainer onSubmit={onSubmit}>\n\t\t\t\t\t<InputContainer marginBottom={true} style={{ marginTop: 0 }}>\n\t\t\t\t\t\t<LabelWrapper error={!!errors.instance}>\n\t\t\t\t\t\t\t<InputLabel>Instance</InputLabel>\n\t\t\t\t\t\t\t{isCheckingInstance != false && (\n\t\t\t\t\t\t\t\t<InputErrorText>\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<TextDivider>-</TextDivider>\n\t\t\t\t\t\t\t\t\t\tChecking\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</InputErrorText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{errors.instance && (\n\t\t\t\t\t\t\t\t<InputErrorText>\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<TextDivider>-</TextDivider>\n\t\t\t\t\t\t\t\t\t\t{errors.instance.message}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</InputErrorText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LabelWrapper>\n\t\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\t{...register(\"instance\", {\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tvalue: Globals.routeSettings.wellknown,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tplaceholder=\"Instance Root URL\"\n\t\t\t\t\t\t\t\tonChange={handleInstanceChange}\n\t\t\t\t\t\t\t\terror={!!errors.instance}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t<InputContainer marginBottom>\n\t\t\t\t\t\t<LabelWrapper error={!!errors.login}>\n\t\t\t\t\t\t\t<InputLabel>Email</InputLabel>\n\t\t\t\t\t\t\t{errors.login && (\n\t\t\t\t\t\t\t\t<InputErrorText>\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<TextDivider>-</TextDivider>\n\t\t\t\t\t\t\t\t\t\t{errors.login.message}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</InputErrorText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LabelWrapper>\n\t\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t{...register(\"login\", { required: true })}\n\t\t\t\t\t\t\t\terror={!!errors.login}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t<InputContainer marginBottom>\n\t\t\t\t\t\t<LabelWrapper error={!!errors.password}>\n\t\t\t\t\t\t\t<InputLabel>Password</InputLabel>\n\t\t\t\t\t\t\t{errors.password && (\n\t\t\t\t\t\t\t\t<InputErrorText>\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<TextDivider>-</TextDivider>\n\t\t\t\t\t\t\t\t\t\t{errors.password.message}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</InputErrorText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LabelWrapper>\n\t\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t{...register(\"password\", { required: true })}\n\t\t\t\t\t\t\t\terror={!!errors.password}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t{/* TODO:  I need to figure this out, clicking this should submit the form or even a different function with only email being required */}\n\t\t\t\t\t{/* <PasswordResetLink onClick={forgotPassword} type=\"button\">\n\t\t\t\t\t\tForgot your password?\n\t\t\t\t\t</PasswordResetLink> */}\n\n\t\t\t\t\t<SubmitButton palette=\"primary\" type=\"submit\" disabled={loading}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</SubmitButton>\n\n\t\t\t\t\t<AuthSwitchPageContainer>\n\t\t\t\t\t\t<AuthSwitchPageLabel>New to Spacebar?&nbsp;</AuthSwitchPageLabel>\n\t\t\t\t\t\t<AuthSwitchPageLink\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnavigate(\"/register\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</AuthSwitchPageLink>\n\t\t\t\t\t</AuthSwitchPageContainer>\n\t\t\t\t</FormContainer>\n\t\t\t</AuthContainer>\n\t\t</Wrapper>\n\t);\n}\n\nexport default LoginPage;\n"],"names":["LoginPage","app","useAppStore","logger","useLogger","navigate","useNavigate","loading","setLoading","React","captchaSiteKey","setCaptchaSiteKey","mfaData","setMfaData","captchaRef","debounce","setDebounce","isCheckingInstance","setCheckingInstance","register","handleSubmit","errors","setError","setValue","clearErrors","useForm","resetCaptcha","_a","getValidURL","url","onSubmit","data","Routes","r","t","messageFromFieldError","onCaptchaVerify","token","handleInstanceChange","e","endpoints","REST","Globals","HCaptcha","jsx","MFA","Wrapper","jsxs","AuthContainer","HeaderContainer","Fragment","SpacebarLogoBlue","SubHeader","FormContainer","InputContainer","LabelWrapper","InputLabel","InputErrorText","TextDivider","InputWrapper","Input","SubmitButton","AuthSwitchPageContainer","AuthSwitchPageLabel","AuthSwitchPageLink"],"mappings":"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"}