var u=Object.defineProperty;var c=(a,t,e)=>t in a?u(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var h=(a,t,e)=>c(a,typeof t!="symbol"?t+"":t,e);import{aG as v,ai as f,aj as d,ak as n}from"./DIBLJojdTQB51I2zM4gm.js";import{R as m}from"./C4-o4AZ3QXTmU8l3poVi.js";var y=Object.defineProperty,b=Object.getOwnPropertyDescriptor,s=(a,t,e,p)=>{for(var r=p>1?void 0:p?b(t,e):t,i=a.length-1,l;i>=0;i--)(l=a[i])&&(r=(p?l(t,e,r):l(r))||r);return p&&r&&y(t,e,r),r};class o{constructor(t){h(this,"app");h(this,"readstates",new v);this.app=t}add(t){this.readstates.set(t.id,new m(this.app,t))}update(t){const e=this.readstates.get(t.id);e?e.update(t):this.add(t)}addAll(t){t==null||t.forEach(e=>this.add(e))}get(t){return this.readstates.get(t)}get all(){return Array.from(this.readstates.values())}remove(t){this.readstates.delete(t)}get count(){return this.readstates.size}has(t){return this.readstates.has(t)}}s([f],o.prototype,"readstates",2);s([d],o.prototype,"add",1);s([d],o.prototype,"update",1);s([d],o.prototype,"addAll",1);s([n],o.prototype,"all",1);s([d],o.prototype,"remove",1);s([n],o.prototype,"count",1);export{o as R};
//# sourceMappingURL=Co57WqN-SLlu5QdW9jCW.js.map
