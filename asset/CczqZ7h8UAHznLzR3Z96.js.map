{"version":3,"file":"CczqZ7h8UAHznLzR3Z96.js","sources":["../../src/components/messaging/MessageList.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport styled from \"styled-components\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { useAppStore } from \"../../hooks/useAppStore\";\nimport useLogger from \"../../hooks/useLogger\";\nimport { MessageGroup as MessageGroupType } from \"../../stores/MessageStore\";\nimport Channel from \"../../stores/objects/Channel\";\nimport Guild from \"../../stores/objects/Guild\";\nimport { Permissions } from \"../../utils/Permissions\";\nimport { HorizontalDivider } from \"../Divider\";\nimport MessageGroup from \"./MessageGroup\";\n\nexport const MessageAreaWidthContext = React.createContext(0);\nexport const MESSAGE_AREA_PADDING = 82;\n\nconst Container = styled.div`\n\tflex: 1 1 auto;\n\toverflow-y: auto;\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nconst EndMessageContainer = styled.div`\n\tmargin: 16px 16px 0 16px;\n`;\n\ninterface Props {\n\tguild: Guild;\n\tchannel: Channel;\n\tbefore?: string;\n}\n\n/**\n * Main component for rendering the messages list of a channel\n */\nfunction MessageList({ guild, channel }: Props) {\n\tconst app = useAppStore();\n\tconst logger = useLogger(\"MessageList.tsx\");\n\tconst [hasMore, setHasMore] = React.useState(true);\n\tconst [canView, setCanView] = React.useState(false);\n\tconst messageGroups = channel.messages.groups;\n\tconst ref = React.useRef<HTMLDivElement>(null);\n\tconst { width } = useResizeObserver<HTMLDivElement>({ ref });\n\n\tReact.useEffect(() => {\n\t\tconst permission = Permissions.getPermission(app.account!.id, guild, channel);\n\t\tconst hasPermission = permission.has(\"READ_MESSAGE_HISTORY\");\n\t\tsetCanView(hasPermission);\n\n\t\tif (guild && channel && channel.messages.count === 0) {\n\t\t\tchannel.getMessages(app, true).then((r) => {\n\t\t\t\tif (r < 50) {\n\t\t\t\t\tsetHasMore(false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tlogger.debug(\"MessageList unmounted\");\n\t\t\tsetHasMore(true);\n\t\t\tsetCanView(false);\n\t\t};\n\t}, [guild, channel]);\n\n\tconst fetchMore = React.useCallback(() => {\n\t\tif (!channel.messages.count) {\n\t\t\tlogger.warn(\"channel has no messages, aborting!\");\n\t\t\treturn;\n\t\t}\n\t\t// get last group\n\t\tconst lastGroup = messageGroups[messageGroups.length - 1];\n\t\tif (!lastGroup) {\n\t\t\tlogger.warn(\"No last group found, aborting fetchMore\");\n\t\t\treturn;\n\t\t}\n\t\t// ignore queued messages\n\t\tif (\"status\" in lastGroup.messages[0]) return;\n\t\t// get first message in the group to use as before\n\t\tconst before = lastGroup.messages[0].id;\n\t\tlogger.debug(`Fetching 50 messages before ${before} for channel ${channel.id}`);\n\t\tchannel.getMessages(app, false, 50, before).then((r) => {\n\t\t\tif (r < 50) {\n\t\t\t\tsetHasMore(false);\n\t\t\t}\n\t\t});\n\t}, [channel, messageGroups]);\n\n\tconst renderGroup = React.useCallback(\n\t\t(group: MessageGroupType) => (\n\t\t\t<MessageGroup key={`messageGroup-${group.messages[group.messages.length - 1].id}`} group={group} />\n\t\t),\n\t\t[messageGroups],\n\t);\n\n\treturn (\n\t\t<MessageAreaWidthContext.Provider value={(width ?? 0) - MESSAGE_AREA_PADDING}>\n\t\t\t<Container id=\"scrollable-div\" ref={ref}>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tdataLength={messageGroups.length}\n\t\t\t\t\tnext={fetchMore}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column-reverse\",\n\t\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t}} // to put endMessage and loader to the top.\n\t\t\t\t\thasMore={hasMore}\n\t\t\t\t\tinverse={true}\n\t\t\t\t\tloader={\n\t\t\t\t\t\t<PulseLoader\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\talignContent: \"center\",\n\t\t\t\t\t\t\t\tmargin: 30,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"var(--primary)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: seems to be broken in react-infinite-scroll-component when using inverse\n\t\t\t\t\tscrollThreshold={0.5}\n\t\t\t\t\tscrollableTarget=\"scrollable-div\"\n\t\t\t\t\tendMessage={\n\t\t\t\t\t\t<EndMessageContainer>\n\t\t\t\t\t\t\t<h1 style={{ fontWeight: 700, margin: \"8px 0\" }}>Welcome to #{channel.name}!</h1>\n\t\t\t\t\t\t\t<p style={{ color: \"var(--text-secondary)\" }}>\n\t\t\t\t\t\t\t\tThis is the start of the #{channel.name} channel.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<HorizontalDivider />\n\t\t\t\t\t\t</EndMessageContainer>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{messageGroups.map((group) => renderGroup(group))}\n\t\t\t\t</InfiniteScroll>\n\t\t\t</Container>\n\t\t</MessageAreaWidthContext.Provider>\n\t);\n}\n\nexport default observer(MessageList);\n"],"names":["MessageAreaWidthContext","React","MESSAGE_AREA_PADDING","Container","styled","EndMessageContainer","MessageList","guild","channel","app","useAppStore","logger","useLogger","hasMore","setHasMore","canView","setCanView","messageGroups","ref","width","useResizeObserver","hasPermission","Permissions","r","fetchMore","lastGroup","before","renderGroup","group","jsx","MessageGroup","InfiniteScroll","PulseLoader","jsxs","HorizontalDivider","MessageList$1","observer"],"mappings":"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"}