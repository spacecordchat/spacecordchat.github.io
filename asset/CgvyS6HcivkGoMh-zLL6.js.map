{"version":3,"file":"CgvyS6HcivkGoMh-zLL6.js","sources":["../../src/components/media/Video.tsx"],"sourcesContent":["import { APIAttachment } from \"@spacebarchat/spacebar-api-types/v9\";\nimport React from \"react\";\nimport { PuffLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { calculateImageRatio, calculateScaledDimensions } from \"../../utils/Message\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmin-height: 300px;\n\tmin-width: 300px;\n\tbackground-color: var(--background-secondary);\n\tborder-radius: 10px;\n`;\n\ninterface Props {\n\tattachment: APIAttachment;\n}\n\nfunction Video({ attachment }: Props) {\n\tconst ref = React.useRef<HTMLVideoElement>(null);\n\tconst [isLoading, setLoading] = React.useState(true);\n\tconst [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n\tconst [isErrored, setErrored] = React.useState(false);\n\n\tconst url = attachment.proxy_url && attachment.proxy_url.length > 0 ? attachment.proxy_url : attachment.url;\n\n\tconst onLoadedMetadata = (e: React.SyntheticEvent<HTMLVideoElement, Event>) => {\n\t\tconst video = e.target as HTMLVideoElement;\n\t\tconst width = video.videoWidth;\n\t\tconst height = video.videoHeight;\n\t\tconst ratio = calculateImageRatio(width, height, 300, 300);\n\t\tconst scaledDimensions = calculateScaledDimensions(width, height, ratio, 300, 300);\n\t\tsetDimensions({ width: scaledDimensions.scaledWidth, height: scaledDimensions.scaledHeight });\n\t\tsetLoading(false);\n\t};\n\n\tconst onError = () => {\n\t\tsetErrored(true);\n\t};\n\n\t// TODO: poster\n\t// TODO: the server doesn't return height and width yet for videos\n\treturn (\n\t\t<>\n\t\t\t{isLoading && !isErrored && (\n\t\t\t\t<Container>\n\t\t\t\t\t<PuffLoader size={\"42px\"} color=\"var(--primary)\" />\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t\t{isErrored && (\n\t\t\t\t<Container>\n\t\t\t\t\t<p>Failed to load video</p>\n\t\t\t\t</Container>\n\t\t\t)}\n\n\t\t\t{!isErrored && (\n\t\t\t\t<video\n\t\t\t\t\tstyle={isLoading ? { display: \"none\" } : { borderRadius: \"5px\" }}\n\t\t\t\t\tcontrols\n\t\t\t\t\tpreload=\"metadata\"\n\t\t\t\t\twidth={dimensions.width}\n\t\t\t\t\theight={dimensions.height}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tonLoadedMetadata={onLoadedMetadata}\n\t\t\t\t\tonError={onError}\n\t\t\t\t>\n\t\t\t\t\t<source src={url} type={attachment.content_type} />\n\t\t\t\t</video>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Video;\n"],"names":["Container","styled","Video","attachment","ref","React","isLoading","setLoading","dimensions","setDimensions","isErrored","setErrored","url","onLoadedMetadata","e","video","width","height","ratio","calculateImageRatio","scaledDimensions","calculateScaledDimensions","onError","jsxs","Fragment","jsx","PuffLoader"],"mappings":"wHAMA,MAAMA,EAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAczB,SAASC,EAAM,CAAE,WAAAC,GAAqB,CAC/B,MAAAC,EAAMC,EAAM,OAAyB,IAAI,EACzC,CAACC,EAAWC,CAAU,EAAIF,EAAM,SAAS,EAAI,EAC7C,CAACG,EAAYC,CAAa,EAAIJ,EAAM,SAAS,CAAE,MAAO,EAAG,OAAQ,EAAG,EACpE,CAACK,EAAWC,CAAU,EAAIN,EAAM,SAAS,EAAK,EAE9CO,EAAMT,EAAW,WAAaA,EAAW,UAAU,OAAS,EAAIA,EAAW,UAAYA,EAAW,IAElGU,EAAoBC,GAAqD,CAC9E,MAAMC,EAAQD,EAAE,OACVE,EAAQD,EAAM,WACdE,EAASF,EAAM,YACfG,EAAQC,EAAoBH,EAAOC,EAAQ,IAAK,GAAG,EACnDG,EAAmBC,EAA0BL,EAAOC,EAAQC,EAAO,IAAK,GAAG,EACjFT,EAAc,CAAE,MAAOW,EAAiB,YAAa,OAAQA,EAAiB,aAAc,EAC5Fb,EAAW,EAAK,CACjB,EAEMe,EAAU,IAAM,CACrBX,EAAW,EAAI,CAChB,EAIA,OAEGY,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAalB,GAAA,CAACI,GACde,EAAA,IAACzB,EACA,CAAA,SAAAyB,EAAAA,IAACC,GAAW,KAAM,OAAQ,MAAM,gBAAA,CAAiB,CAClD,CAAA,EAEAhB,GACCe,EAAA,IAAAzB,EAAA,CACA,SAACyB,EAAAA,IAAA,IAAA,CAAE,+BAAoB,CAAA,EACxB,EAGA,CAACf,GACDe,EAAA,IAAC,QAAA,CACA,MAAOnB,EAAY,CAAE,QAAS,QAAW,CAAE,aAAc,KAAM,EAC/D,SAAQ,GACR,QAAQ,WACR,MAAOE,EAAW,MAClB,OAAQA,EAAW,OACnB,IAAAJ,EACA,iBAAAS,EACA,QAAAS,EAEA,eAAC,SAAO,CAAA,IAAKV,EAAK,KAAMT,EAAW,YAAc,CAAA,CAAA,CAAA,CAClD,EAEF,CAEF"}