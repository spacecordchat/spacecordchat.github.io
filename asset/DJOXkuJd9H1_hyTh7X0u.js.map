{"version":3,"file":"DJOXkuJd9H1_hyTh7X0u.js","sources":["../../src/components/messaging/attachments/AttachmentUpload.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { modalController } from \"../../../controllers/modals/ModalController\";\nimport useLogger from \"../../../hooks/useLogger\";\nimport { bytesToSize } from \"../../../utils/Utils\";\nimport { MAX_UPLOAD_SIZE } from \"../../../utils/constants\";\nimport Icon from \"../../Icon\";\n\nconst Container = styled.button`\n\theight: 45px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: transparent;\n\toutline: none;\n\tborder: none;\n\tcursor: pointer;\n`;\n\nconst HoverIcon = styled(Icon)`\n\tcolor: var(--text-secondary);\n\t&:hover {\n\t\tcolor: var(--text);\n\t}\n`;\n\n// https://github.com/revoltchat/revite/blob/master/src/controllers/client/jsx/legacy/FileUploads.tsx#L81\nlet input: HTMLInputElement;\nexport function fileUpload(cb: (files: File[]) => void, onFileTooLarge: () => void) {\n\tif (input) input.remove();\n\n\tinput = document.createElement(\"input\");\n\n\tinput.accept = \"*\";\n\tinput.type = \"file\";\n\tinput.multiple = true;\n\tinput.style.display = \"none\";\n\n\tinput.addEventListener(\"change\", async (e) => {\n\t\tconst files = (e.currentTarget as HTMLInputElement)?.files;\n\t\tif (!files) return;\n\n\t\tfor (const file of files) {\n\t\t\tif (file.size > MAX_UPLOAD_SIZE) {\n\t\t\t\treturn onFileTooLarge();\n\t\t\t}\n\t\t}\n\n\t\tcb(Array.from(files));\n\t});\n\n\t// iOS requires us to append the file input\n\t// to DOM to allow us to add any images\n\tdocument.body.appendChild(input);\n\tinput.click();\n}\n\ninterface Props {\n\tappend: (files: File[]) => void;\n}\n\nfunction AttachmentUpload({ append }: Props) {\n\tconst logger = useLogger(\"AttachmentUpload\");\n\n\tconst fileTooLarge = () => {\n\t\tmodalController.push({\n\t\t\ttype: \"error\",\n\t\t\ttitle: \"File Too Large\",\n\t\t\terror: `Max file size is ${bytesToSize(MAX_UPLOAD_SIZE)}.`,\n\t\t});\n\t\treturn;\n\t};\n\n\tconst onClick = () => {\n\t\tfileUpload(append, fileTooLarge);\n\t};\n\n\tReact.useEffect(() => {\n\t\tfunction paste(e: ClipboardEvent) {\n\t\t\tconst items = e.clipboardData?.items;\n\t\t\tif (typeof items === \"undefined\") return;\n\n\t\t\tconst files = [];\n\t\t\tfor (const item of items) {\n\t\t\t\tif (!item.type.startsWith(\"text/\")) {\n\t\t\t\t\tconst blob = item.getAsFile();\n\t\t\t\t\tif (blob) {\n\t\t\t\t\t\tif (blob.size > MAX_UPLOAD_SIZE) {\n\t\t\t\t\t\t\tfileTooLarge();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.push(blob);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(files);\n\t\t}\n\n\t\tfunction dragover(e: DragEvent) {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tif (e.dataTransfer) e.dataTransfer.dropEffect = \"copy\";\n\t\t}\n\n\t\tfunction drop(e: DragEvent) {\n\t\t\te.preventDefault();\n\n\t\t\tconst dropped = e.dataTransfer?.files;\n\t\t\tif (dropped) {\n\t\t\t\tconst files = [];\n\t\t\t\tfor (const item of dropped) {\n\t\t\t\t\tif (item.size > MAX_UPLOAD_SIZE) {\n\t\t\t\t\t\tfileTooLarge();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfiles.push(item);\n\t\t\t\t}\n\n\t\t\t\tappend(files);\n\t\t\t}\n\t\t}\n\n\t\tdocument.addEventListener(\"paste\", paste);\n\t\tdocument.addEventListener(\"dragover\", dragover);\n\t\tdocument.addEventListener(\"drop\", drop);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"paste\", paste);\n\t\t\tdocument.removeEventListener(\"dragover\", dragover);\n\t\t\tdocument.removeEventListener(\"drop\", drop);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Container onClick={onClick}>\n\t\t\t<HoverIcon icon=\"mdiPlusCircle\" size=\"24px\" />\n\t\t</Container>\n\t);\n}\n\nexport default observer(AttachmentUpload);\n"],"names":["Container","styled","HoverIcon","Icon","input","fileUpload","cb","onFileTooLarge","e","files","_a","file","MAX_UPLOAD_SIZE","AttachmentUpload","append","fileTooLarge","modalController","bytesToSize","onClick","React","paste","items","item","blob","dragover","drop","dropped","jsx","AttachmentUpload$1","observer"],"mappings":"2PASA,MAAMA,EAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYnBC,EAAYD,EAAOE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ7B,IAAIC,EACY,SAAAC,EAAWC,EAA6BC,EAA4B,CAC/EH,KAAa,OAAO,EAEhBA,EAAA,SAAS,cAAc,OAAO,EAEtCA,EAAM,OAAS,IACfA,EAAM,KAAO,OACbA,EAAM,SAAW,GACjBA,EAAM,MAAM,QAAU,OAEhBA,EAAA,iBAAiB,SAAU,MAAOI,GAAM,OACvC,MAAAC,GAASC,EAAAF,EAAE,gBAAF,YAAAE,EAAsC,MACrD,GAAKD,EAEL,WAAWE,KAAQF,EACd,GAAAE,EAAK,KAAOC,EACf,OAAOL,EAAe,EAIrBD,EAAA,MAAM,KAAKG,CAAK,CAAC,EAAA,CACpB,EAIQ,SAAA,KAAK,YAAYL,CAAK,EAC/BA,EAAM,MAAM,CACb,CAMA,SAASS,EAAiB,CAAE,OAAAC,GAAiB,CAG5C,MAAMC,EAAe,IAAM,CAC1BC,EAAgB,KAAK,CACpB,KAAM,QACN,MAAO,iBACP,MAAO,oBAAoBC,EAAYL,CAAe,CAAC,GAAA,CACvD,CAEF,EAEMM,EAAU,IAAM,CACrBb,EAAWS,EAAQC,CAAY,CAChC,EAEA,OAAAI,EAAM,UAAU,IAAM,CACrB,SAASC,EAAMZ,EAAmB,OAC3B,MAAAa,GAAQX,EAAAF,EAAE,gBAAF,YAAAE,EAAiB,MAC3B,GAAA,OAAOW,EAAU,IAAa,OAElC,MAAMZ,EAAQ,CAAC,EACf,UAAWa,KAAQD,EAClB,GAAI,CAACC,EAAK,KAAK,WAAW,OAAO,EAAG,CAC7B,MAAAC,EAAOD,EAAK,UAAU,EAC5B,GAAIC,EAAM,CACL,GAAAA,EAAK,KAAOX,EAAiB,CACnBG,EAAA,EACb,QAAA,CAGDN,EAAM,KAAKc,CAAI,CAAA,CAChB,CAIFT,EAAOL,CAAK,CAAA,CAGb,SAASe,EAAShB,EAAc,CAC/BA,EAAE,gBAAgB,EAClBA,EAAE,eAAe,EACbA,EAAE,eAAgBA,EAAA,aAAa,WAAa,OAAA,CAGjD,SAASiB,EAAKjB,EAAc,OAC3BA,EAAE,eAAe,EAEX,MAAAkB,GAAUhB,EAAAF,EAAE,eAAF,YAAAE,EAAgB,MAChC,GAAIgB,EAAS,CACZ,MAAMjB,EAAQ,CAAC,EACf,UAAWa,KAAQI,EAAS,CACvB,GAAAJ,EAAK,KAAOV,EAAiB,CACnBG,EAAA,EACb,QAAA,CAGDN,EAAM,KAAKa,CAAI,CAAA,CAGhBR,EAAOL,CAAK,CAAA,CACb,CAGQ,gBAAA,iBAAiB,QAASW,CAAK,EAC/B,SAAA,iBAAiB,WAAYI,CAAQ,EACrC,SAAA,iBAAiB,OAAQC,CAAI,EAE/B,IAAM,CACH,SAAA,oBAAoB,QAASL,CAAK,EAClC,SAAA,oBAAoB,WAAYI,CAAQ,EACxC,SAAA,oBAAoB,OAAQC,CAAI,CAC1C,CACD,EAAG,EAAE,EAGJE,EAAA,IAAC3B,GAAU,QAAAkB,EACV,SAAAS,EAAA,IAACzB,GAAU,KAAK,gBAAgB,KAAK,MAAA,CAAO,CAC7C,CAAA,CAEF,CAEA,MAAe0B,EAAAC,EAAShB,CAAgB"}